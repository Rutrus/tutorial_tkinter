.. _checkbutton:

Casillas de verificacion [Checkbutton]
======================================

Los que tengan conocimiento en interfaces o diseño web seguramente conocerán a los famosos 'checkbox' que en Tkinter
tienen el nombre de 'checkbutton', para los nos los conocen se tratan de casillas de verificación cuya función es la de
permitir seleccionar o deseleccionar, activando o desactivando funciones u opciones. A quien no le a tocado activar ese
pequeño cuadrado al lado de un texto que nos dice "He leído y acepto los términos y condiciones del sitio.", aunque haya
aplicaciones que puedan no requerirlo no significa que se pueda prescindir de ellos ya que su uso esta en gran parte de
las aplicaciones de uso cotidiano desde nuestros editores o entornos de desarrollo cuando programamos hasta en las
utilidades de configuración de nuestros sistemas operativos, aunque repetimos su uso nos es obligatorio siempre es bueno
conocer las herramientas que tenemos disponibles.

Como venimos haciendo escribamos un poco de codigo y luego vayamos viendo que se escribio

.. code-block:: bash

    >>> from six.moves import tkinter as tk
    >>> root = tk.Tk()
    >>> int_var = tk.IntVar()
    >>> int_var.get()
    0
    >>> check = tk.Checkbutton(root, text="Probando", variable=int_var)
    >>> check.pack()
    >>> # Hacemos click en el checkbutton activandola
    >>> int_var.get()
    1
    >>> # Ahora desmarcamos la opcion del checkbutton
    >>> int_var.get()
    0
    >>>

.. code-block:: bash

    >>> from six.moves import tkinter as tk
    >>> root = tk.Tk()
    >>> bool_var = tk.BooleanVar()
    >>> bool_var.get()
    0
    >>> check = tk.Checkbutton(root, text="Probando", variable=bool_var)
    >>> check.pack()
    >>> bool_var.get()
    True
    >>> bool_var.get()
    False
    >>>

.. figure:: img/checkbutton/basic_Checkbutton.png
    :alt: Muestra basic Checkbutton
    :align: center

    Ejemplo basico de Checkbutton

.. todo:: Enlazar 'IntVar' y 'BooleanVar' con sus secciones

En los dos ejemplos establecemos una variable que puede ser del tipo 'IntVar' o 'BooleanVar', las dos cumplen con su
trabajo aunque trabajen con distintos tipos de datos consiguen el mismo resultado, establecida nuestra variable pasamos
a crear y mostrar nuestra casilla de verificación y con ella marcándola y desmarcandola vemos como el valor de la
variable alterna de True a False en el caso de 'BooleanVar' o de 0 a 1 en el caso de'IntVar'. Con este ejemplo podemos
tener una idea de como trabaja 'Checkbutton' pero aun nos quedan ver algunos métodos para volverlo mas interesante.


.. _checkbutton-methods:

Métodos
-------

.. _cget-checkbutton-method:

cget
^^^^

Este método cumple la misma función que se vio en el widget :ref:`Label <label>`. :ref:`Ver aqui <cget-method>`.

.. _configure-checkbutton-method:


configure
^^^^^^^^^

Este método cumple la misma función que se vio en el widget :ref:`Label <label>`. :ref:`Ver aqui <configure-method>`.


.. _deselect-checkbutton-method:

deselect
^^^^^^^^

.. py:method:: deselect()

    :rtype: None

Desmarca la selección de la casilla de verificación y establece el valor de la variable asociada a False. Usarlo es muy
simple, para verlo deberíamos crear un 'Checkbutton' básico marcarlo y luego llamar al método 'deselect'

.. code-block:: bash

    >>> checkbutton.deselect()


.. _flash-checkbutton-method:

flash
^^^^^


.. _invoke-checkbutton-method:

invoke
^^^^^^

.. todo:: Completar valor de retorno

.. py:method:: invoke()

    :return:
    :rtype: str

Este comando tiene la particularidad de realizar la misma acción que el método 'toggle' pero se diferencia porque
'invoke' se comporta como si el usuario hubiera hecho clic sobre el 'Checkbutton', con esto nos referimos a que si
nuestra casilla de verificación tuviera asociado un comando a través de la opción 'command' esta se ejecutaría a
diferencia de los métodos 'select', 'deselect' y 'toggle' que lo ignoran.

.. code-block:: bash

    >>> checkbutton.invoke()


.. _select-checkbutton-method:

select
^^^^^^

.. py:method:: select()

Asi como contamos con una forma de desmarcar nuestro 'Checkbutton' con 'select' podemos marcarla.

.. code-block:: bash

    >>> checkbutton.select()


.. _toggle-checkbutton-method:

toggle
^^^^^^

.. py:method:: toggle()

Este ultimo metodo une a 'select' y 'deselect', nos permite alternar su estado actualizando el valor de su variable
asociada, por ejemplo si la casilla se encontrara marcada al llamar a 'toggle' esta se desmarcaria y si volvieramos a
llamar a 'toggle' esta se volveria a marcar.

.. code-block:: bash

    >>> checkbutton.toggle()
