.. _options:

Opciones
========

Muchos de los widgets que utilizamos y vimos hasta ahora cuentan con opciones, con el fin de no repetir la descripcion
de cada uno de ellos seran vistos uno a uno en esta seccion. Esta seccion no es mas que una traduccion de la
documentacion oficial de Tk sobre la libreria Tkinter con ejemplos e imagenes.

.. todo:: Enlazar con seccion para los colores

.. note::

    Para mas informacion sobre los colores visite la seccion "Colores" que se ve en

Pueden encontrar mas informacion desde la documentacion oficial de Tcl/Tk sobre las opciones estandar
`http://www.tcl.tk/man/tcl8.5/TkCmd/options.htm <http://www.tcl.tk/man/tcl8.5/TkCmd/options.htm>`_

.. todo:: Especificar widgets afectados por cada opcion (Ver formato de impresion)


.. _option-activebackground:

activebackground
----------------

Con esta opcion podemos indicar que color de fondo se debera utilizar cuando el cursor del mouse se posicione sobre el
widget. Para algunos elementos y en algunas plataformas solo sera visible cuando se hace click sobre el.

Acepta cualquier color en un formato valido para Tk, ver en seccion "Colores"

.. code-block:: python

    boton = Tkinter.Button(root, text="Hola Mundo!!!", activebackground="#F50743")
    boton.pack()

.. figure:: img/activebackground/basic_activebackground.png
    :alt: Ejemplo basico de activebackground
    :align: left

    Ejemplo sin el cursor encima

.. figure:: img/activebackground/basic_activebackground_oncursor.png
    :alt: Ejemplo basico de activebackground
    :align: right

    Ejemplo con el cursor encima

    Se muestra con color '#F50743' (Rojo)


.. _option-activeforeground:

activeforeground
----------------

Al igual que pasa con 'activebackground' con esta otra opcion podemos especificar el color en este caso de primer plano
del widget cuando se posiciona el cursor sobre este.

.. code-block:: python

    boton = tk.Button(root, text="Hola Mundo!!!", activeforeground="#F50743")

.. figure:: img/activeforeground/basic_activeforeground.png
    :alt: Ejemplo basico de activeforeground
    :align: left

    Ejemplo sin el cursor encima

.. figure:: img/activeforeground/basic_activeforeground_oncursor.png
    :alt: Ejemplo basico de activeforeground
    :align: right

    Ejemplo con el cursor encima

    Se muestra con color '#F50743' (Rojo)


.. _option-anchor:

anchor
------

Tkinter nos permite controlar de que forma se va a posicionar un texto o imagen con respecto al widget en el que se
encuentra. La opcion por defecto es 'CENTER' que muestra el elemento centrado.

  +----+----------+-------+
  | NW |  N       |    NE |
  +----+----------+-------+
  | W  |  CENTER  |    E  |
  +----+----------+-------+
  | SW |  S       |    SE |
  +----+----------+-------+


.. _option-anchor-nw:

NW
^^

Posiciona el texto/imagen en la esquina superior izquierda del widget

.. code-block:: python

    boton = tk.Button(root, text="Hola Mundo!!!", width=20, height=10, anchor="nw")

.. image:: img/anchor/anchor_nw.png
    :alt: Ejemplo anchor="nw"
    :align: center


.. _option-anchor-n:

N
^

Posiciona el texto/imagen en la parte superior del widget

.. code-block:: python

    boton = tk.Button(root, text="Hola Mundo!!!", width=20, height=10, anchor="n")

.. image:: img/anchor/anchor_n.png
    :alt: Ejemplo anchor="n"
    :align: center


.. _option-anchor-ne:

NE
^^

Posiciona el texto/imagen en la esquina superior derecha del widget

.. code-block:: python

    boton = tk.Button(root, text="Hola Mundo!!!", width=20, height=10, anchor="ne")

.. image:: img/anchor/anchor_ne.png
    :alt: Ejemplo anchor="ne"
    :align: center


.. _option-anchor-w:

W
^

Posiciona el texto/imagen en la parte izquierda del widget

.. code-block:: python

    boton = tk.Button(root, text="Hola Mundo!!!", width=20, height=10, anchor="w")

.. image:: img/anchor/anchor_w.png
    :alt: Ejemplo anchor="w"
    :align: center


.. _option-anchor-center:

CENTER
^^^^^^

Posiciona el texto/imagen en el centro del widget

.. code-block:: python

    boton = tk.Button(root, text="Hola Mundo!!!", width=20, height=10, anchor="center")

.. image:: img/anchor/anchor_center.png
    :alt: Ejemplo anchor="center"
    :align: center


.. _option-anchor-e:

E
^

Posiciona el texto/imagen en la parte derecha del widget

.. code-block:: python

    boton = tk.Button(root, text="Hola Mundo!!!", width=20, height=10, anchor="e")

.. image:: img/anchor/anchor_e.png
    :alt: Ejemplo anchor="e"
    :align: center


.. _option-anchor-sw:

SW
^^

Posiciona el texto/imagen en la esquina inferior izquierda del widget

.. code-block:: python

    boton = tk.Button(root, text="Hola Mundo!!!", width=20, height=10, anchor="sw")

.. image:: img/anchor/anchor_sw.png
    :alt: Ejemplo anchor="sw"
    :align: center


.. _option-anchor-s:

S
^

Posiciona el texto/imagen en la parte inferior del widget

.. code-block:: python

    boton = tk.Button(root, text="Hola Mundo!!!", width=20, height=10, anchor="s")

.. image:: img/anchor/anchor_s.png
    :alt: Ejemplo anchor="s"
    :align: center


.. _option-anchor-se:

SE
^^

Posiciona el texto/imagen en la esquina inferior derecha del widget

.. code-block:: python

    boton = tk.Button(root, text="Hola Mundo!!!", width=20, height=10, anchor="se")

.. image:: img/anchor/anchor_se.png
    :alt: Ejemplo anchor="se"
    :align: center


.. _option-background:

background (bg)
---------------

Sirve para indicar el color de fondo que tendra en area del widget cuando este se encuentre inactivo. Tambien se puede
utilizar su forma abreviada 'bg' como podemos ver en el segundo ejemplo.

.. code-block:: python

    boton = tk.Button(root, text="Hola Mundo!!!", background="#38EB5C")

.. code-block:: python

    boton = tk.Button(root, text="Hola Mundo!!!", bg="#38EB5C")

.. figure:: img/background/basic_background.png
    :alt: Ejemplo basico de background
    :align: center

    Vemos el color verde que toma el boton


.. _option-bitmap:

bitmap
------

.. todo:: Ampliar documentacion

.. code-block:: python

    boton_error = tk.Label(root, bitmap="error").pack()
    boton_gray75 = tk.Label(root, bitmap="gray75").pack()
    boton_gray50 = tk.Label(root, bitmap="gray50").pack()
    boton_gray25 = tk.Label(root, bitmap="gray25").pack()
    boton_gray12 = tk.Label(root, bitmap="gray12").pack()
    boton_hourglass = tk.Label(root, bitmap="hourglass").pack()
    boton_info = tk.Label(root, bitmap="info").pack()
    boton_questhead = tk.Label(root, bitmap="questhead").pack()
    boton_question = tk.Label(root, bitmap="question").pack()
    boton_warning = tk.Label(root, bitmap="warning").pack()

.. figure:: img/bitmap/predefined_bitmaps.png
    :alt: Bitmaps Predefinidos
    :align: center

    Muestra de los bitmaps predefinidos


.. _option-borderwidth:

borderwidth (bd)
----------------

Nos da la posibilidad de especificar el ancho del borde del elemento con el que estemos trabajando, Tkinter nos permite
especificar el valor en varias unidades de medida (centimetros, pulgadas, milimetros y puntos) las cuales seran vistas
mas adelante en la guia. Si no se utiliza junto con la opcion 'relief' visualmente es similar a utilizar las opciones
'heigth' y 'width' como se puede observar en el ejemplo. El valor por defecto es de 1 pixel.

.. code-block:: python

    boton = tk.Button(root, text="Hola Mundo!!!", borderwidth=15)

.. code-block:: python

    boton = tk.Button(root, text="Hola Mundo!!!", bd=15)

.. figure:: img/borderwidth/borderwidth_15px.png
    :alt: Ejemplo de borderwidth
    :align: center

    Un boton con un borde de 15 pixeles


.. _option-command:

command
-------

Como ya lo mencionamos cuando vimos al widget Button este permite indicar la funcion o metodo que queremos que se llame
cuando se preciona por ejemplo un boton, pero esta opcion tambien funciona con otros widgets de Tkinter cumpliendo la
misma funcion.

.. code-block:: bash

    >>> def callback():
    >>>     print("Excelente")

    >>> boton = tk.Button(root, text="Que te parece la guia?", command=callback)
    'Excelente'


.. _option-cursor:

cursor
------

.. todo:: Crear seccion y enlazar

Nos da la posiblidad de indicar que cursor queremos que se muestre cuando el mouse se posiciona sobre la etiqueta.
En el siguiente enlace podremos encontrar una lista con los cursores disponibles en Tkinter
`http://www.tcl.tk/man/tcl8.5/TkCmd/cursors.htm <http://www.tcl.tk/man/tcl8.5/TkCmd/cursors.htm>`_ (Ver seccion "Anexos"
para ver el listado completo).

El valor 'none' consigue eliminar el cursor cuando se pasa el cursor sobre el widget.

.. code-block:: python

  etiqueta = tk.Label(root, text="Que te parece la guia?", cursor="hand1")

.. figure:: img/cursor/hand1.png
    :alt: Un cursor de ejemplo
    :align: center

    Mostrando una mano a diferencia del cursor normal


.. _option-compound:

compound
--------

Especifica si el widget debe mostrar texto y mapas/imágenes al mismo tiempo, y si es así, donde el mapa de bits o imagen
debe estar en relación con el texto. Debe ser uno de los valores "none", "bottom", "top", "left", "right", o "center".
Por ejemplo, el valor (predeterminado) "none" especifica que el mapa de bits o imagen (si se ha definido en el sistema)
se mostrará en lugar del texto, el valor "left" especifica que el mapa de bits o imagen se muestra a la izquierda del
texto y el valor "center" especifica que el mapa de bits o imagen debe aparecer en la parte superior del texto.

.. figure:: img/compound/compound_left.png
    :alt: compound="left"
    :align: left

    Usando compound con el valor left

.. figure:: img/compound/compound_right.png
    :alt: compound="right"
    :align: right

    Usando compound con el valor right

.. figure:: img/compound/compound_top.png
    :alt: compound="top"
    :align: left

    Usando compound con el valor top

.. figure:: img/compound/compound_bottom.png
    :alt: compound="bottom"
    :align: right

    Usando compound con el valor bottom

.. figure:: img/compound/compound_center.png
    :alt: compound="center"
    :align: left

    Usando compound con el valor center

.. figure:: img/compound/compound_none.png
    :alt: compound="none"
    :align: right

    Usando compound con el valor none


.. _option-default:

default
-------

.. todo:: Escribir documentacion (Opcion valida para Button)


.. _option-disabledbackground:

disabledbackground
------------------

.. todo:: Escribir documentacion (Opcion valida para Spinbox)


.. _option-disabledforeground:

disabledforeground
------------------

Funciona de la misma forma que foreground y activeforeground pero para elementos deshabilitados, se le puede pasar
cualquier color en un formato valido, si no se le pasa una cadena vacia el color que se mostrara sera el de la opcion
foreground pero con un efecto punteado.

El valor por defecto es *None* y obtiene el color del sistema.

.. code-block:: python

    boton = tk.Button(root, text="Hola Mundo!!!", state="disabled", disabledforeground=None)

.. figure:: img/disabledforeground/disabledforeground_none.png
    :alt: disabledforeground con color por defecto
    :align: center

    Usando disabledforeground con el color por defecto

.. code-block:: python

    boton = tk.Button(root, text="Hola Mundo!!!", state="disabled", disabledforeground="#F50743")

.. figure:: img/disabledforeground/disabledforeground_with_value.png
    :alt: disabledforeground con valor
    :align: center

    Usando disabledforeground con un color rojo

.. code-block:: python

    boton = tk.Button(root, text="Hola Mundo!!!", state="disabled", disabledforeground="")

.. figure:: img/disabledforeground/disabledforeground_without_value.png
    :alt: disabledforeground sin valor
    :align: center

    Usando disabledforeground sin darle ningun valor


.. _option-exportselection:

exportselection
---------------

.. todo: Escribir documentacion


.. _option-font:

font
----


.. _option-foreground:

foreground (fg)
---------------

.. todo::

    * Enlazar Label y Entry con sus secciones
    * Ver ejemplos para widgets especificos
    * Mejorar descripcion

Si deseamos cambiar el color de primer plano usamos foreground, para explicarlo un poco mejor asi como vimos background
para determinar el color de fondo del widget tambien podemos cambiar el color de la parte delantera. Por lo general por
ejemplo en Label y Entry el color de foreground modifica el color de la fuente. Este color es mostrado en el estado
normal del widget, completando el circulo de estados ya vistos (normal, activo y desactivado).

Permite usar la abreviatura **fg** como habiamos visto para *background*.

.. code-block:: python

    boton = Tkinter.Button(root, text="Hola Mundo!!!", command=funcion, foreground="#38EB5C")

.. code-block:: python

    boton = Tkinter.Button(root, text="Hola Mundo!!!", command=funcion, fg="#38EB5C")

.. figure:: img/foreground/basic_foreground.png
    :alt: Ejemplo de foreground
    :align: center

    Mostrando una fuente verde con foreground


.. _option-height:

height
------

.. todo:: Opcion valida para Button

Permite indicar la altura a la que se posicionara nuestro widget en lineas no en pixeles. Si esta opcion no se
especifica el tamaño del elemento se ajustara dependiendo el contenido del mismo.

Con None especificamos su valor por defecto que es 0.

.. code-block:: python

    boton = tk.Button(root, text="Hola Mundo!!!", height=0)

.. figure:: img/height/height_0.png
    :alt: Ejemplo de height
    :align: center

    Mostrando una altura de 0

.. code-block:: python

    boton = tk.Button(root, text="Hola Mundo!!!", height=5)

.. figure:: img/height/height_5.png
    :alt: Ejemplo de height
    :align: center

    Mostrando una altura de 5

.. code-block:: python

    boton = tk.Button(root, text="Hola Mundo!!!", height=10)

.. figure:: img/height/height_10.png
    :alt: Ejemplo de height
    :align: center

    Mostrando una altura de 10


.. _option-justify:

justify
-------

El valor por defecto es center.

.. _option-justify-right:

RIGHT
^^^^^

.. code-block:: python

    boton = tk.Button(root, text="Hola\nMundo!!!", justify="right")

.. figure:: img/justify/justify_right.png
    :alt: Ejemplo de justify
    :align: center

    Orientando el texto a la derecha


.. _option-justify-center:

CENTER
^^^^^^

.. code-block:: python

    boton = tk.Button(root, text="Hola\nMundo!!!", justify="center")

.. figure:: img/justify/justify_center.png
    :alt: Ejemplo de justify
    :align: center

    Centrando el texto


.. _option-justify-left:

LEFT
^^^^

.. code-block:: python

    boton = tk.Button(root, text="Hola\nMundo!!!", justify="left")

.. figure:: img/justify/justify_left.png
    :alt: Ejemplo de justify
    :align: center

    Orientando el texto a la izquierda


.. _option-overrelief:

overrelief
----------

.. todo:: Escribir documentacion (Se aplica a Button)

Especifica un relieve alternativo para el botón, que se utilizará cuando el cursor del ratón este sobre el widget. Esta
opcion puede ser usada para hacer toolbar buttons, configurando relief="flat" y overrelief="raised".

La cadena vacía es el valor predeterminado.

.. code-block:: python

    boton = tk.Button(root, text="Hola Mundo!!!", overrelief="")

.. figure:: img/overrelief/overrelief_normal.png
    :alt: Ejemplo de overrelief
    :align: center

    overrelief con valor None

.. code-block:: python

    boton = tk.Button(root, text="Hola Mundo!!!", overrelief="flat")

.. figure:: img/overrelief/overrelief_flat.png
    :alt: Ejemplo de overrelief
    :align: center

    overrelief con valor

.. code-block:: python

    boton = tk.Button(root, text="Hola Mundo!!!", overrelief="raised")

.. figure:: img/overrelief/overrelief_raised.png
    :alt: Ejemplo de overrelief
    :align: center

    overrelief con valor

.. code-block:: python

    boton = tk.Button(root, text="Hola Mundo!!!", relief="flat", overrelief="raised")

.. figure:: img/overrelief/overrelief_flat_raised_mouseout.png
    :alt: Ejemplo de overrelief
    :align: left

    Estilo flat-raised sin cursor encima

.. figure:: img/overrelief/overrelief_flat_raised_mouseover.png
    :alt: Ejemplo de overrelief
    :align: right

    Estilo flat-raised con cursor encima


.. _option-relief:

relief
------

.. todo:: Profundizar introduccion

Especifica la apariencia de un borde decorativo alrededor del widget que simula un efecto 3D sobre el elemento, el
ancho de esta sombra depende del valor que se especifique con el atributo 'borderwidth', los posibles valores son
SUNKEN, RAISED, GROOVE, RIDGE, FLAT. El valor por defecto es FLAT que no coloca ningun borde sobre el widget.

Descripcion de los cuatro estilos:

.. _option-relief-sunken:

SUNKEN
^^^^^^

Borde hundido, que provoca que el elemento que encierra parezca que se encuentra por debajo del nivel de la superficie de la pantalla.

.. code-block:: python

    boton = tk.Button(root, text="Hola Mundo!!!", relief="sunken", borderwidth=5)

.. figure:: img/relief/relief_sunken.png
    :alt: Ejemplo de relief
    :align: center


.. _option-relief-raised:

RAISED
^^^^^^

Borde saliente, que provoca que el elemento que encierra parezca que se encuentra por encima del nivel de la superficie de la pantalla.

.. code-block:: python

    boton = tk.Button(root, text="Hola Mundo!!!", relief="raised", borderwidth=5)

.. figure:: img/relief/relief_raised.png
    :alt: Ejemplo de relief
    :align: center


.. _option-relief-groove:

GROOVE
^^^^^^

Borde hundido, que visualmente parece que se encuentra por debajo del nivel de la superficie de la pantalla.

.. code-block:: python

    boton = tk.Button(root, text="Hola Mundo!!!", relief="groove", borderwidth=5)

.. figure:: img/relief/relief_groove.png
    :alt: Ejemplo de relief
    :align: center


.. _option-relief-ridge:

RIDGE
^^^^^
Borde saliente, que visualmente parece que se encuentra por encima del nivel de la superficie de la pantalla.

.. code-block:: python

    boton = tk.Button(root, text="Hola Mundo!!!", relief="ridge", borderwidth=5)

.. figure:: img/relief/relief_ridge.png
    :alt: Ejemplo de relief
    :align: center


.. _option-relief-flat:

FLAT
^^^^

No se muestra ningún borde.

.. code-block:: python

    boton = tk.Button(root, text="Hola Mundo!!!", relief="flat", borderwidth=5)

.. figure:: img/relief/relief_flat.png
    :alt: Ejemplo de relief
    :align: center


.. option-state:

state
-----

.. todo:: Enlazar opciones 'foreground' y 'background'

Esta opcion especifica tres estados 'normal', 'active' o 'disabled'. En estado normal se muestra el widget usando las
opciones 'foreground' y 'background', en estado 'active' se muestra usando las opciones 'activeforeground' y
'activebackground' y por ultimo el estado 'disabled' es mostrado usando 'disabledforeground' y 'background' y
deshabilitando el uso del widget.

En el siguiente ejemplo se definen tres botones, las tres tienen los mismos argumentos con lo mismos valores a excepcion
de la opcion 'state', en el resultado final podremos ver que al cambiar el valor de 'state' solo toma los valores que
habiamos mencionado en la descripcion de la opcion ignorando el resto.

.. code-block:: python

    from six.moves import tkinter as tk

    root = tk.Tk()
    root.geometry("300x100")

    foreground = "red"
    background = "blue"
    activeforeground = "green"
    activebackground = "black"
    disabledforeground = "white"

    boton_normal = tk.Button(root, text="normal", state="normal",
                           foreground=foreground,
                           background=background,
                           activeforeground=activeforeground,
                           activebackground=activebackground,
                           disabledforeground=disabledforeground).pack()


    boton_active = tk.Button(root, text="active", state="active",
                           foreground=foreground,
                           background=background,
                           activeforeground=activeforeground,
                           activebackground=activebackground,
                           disabledforeground=disabledforeground).pack()

    boton_disabled = tk.Button(root, text="disabled", state="disabled",
                           foreground=foreground,
                           background=background,
                           activeforeground=activeforeground,
                           activebackground=activebackground,
                           disabledforeground=disabledforeground).pack()

.. figure:: img/state/basic_state.png
    :alt: Ejemplo state
    :align: center

    Ejemplo de los 3 estados sin el cursor encima

.. figure:: img/state/basic_state_normal_mouseover.png
    :alt: Ejemplo state
    :align: center

    Ejemplo con el cursor encima del primer boton (Estado normal)

.. figure:: img/state/basic_state_active_mouseover.png
    :alt: Ejemplo state
    :align: center

    Ejemplo con el cursor encima del segundo boton (Estado active)

.. figure:: img/state/basic_state_disabled_mouseover.png
    :alt: Ejemplo state
    :align: center

    Ejemplo con el cursor encima del tercer boton (Estado disabled)
